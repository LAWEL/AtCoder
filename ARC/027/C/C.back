#include <iostream>
#include <set>
#include <map>
#include <vector>
#include <complex>
#include <cassert>
#include <cmath>
#include <tuple>
#include <queue>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <functional>
#include <cstdlib>
#include <ctime>
#include <cctype>
#include <climits>
#include <string>
#include <memory>
#include <array>

using namespace std;

#define REP(i,a,b) for(int i=(a);i<(b);i++)
#define rep(i,n) REP(i,0,n)

int main() {
  int X, Y;
  int N;
  array<int, 300> t, h;
  cin >> X >> Y >> N;
  for(int i=0;i<N;i++){
    cin >> t[i] >> h[i];
  }
  
  pair<int, int> dp[301][601];
  for(int i=0;i<301;i++){
    for(int j=0;j<601;j++){
      dp[i][j] = make_pair(-1, 0);
    }
  }
  dp[0][0] = make_pair(0, 0);
  for(int i=0;i<N;i++){
    for(int j=0;j<=X+Y;j++){
      dp[i+1][j] = max(dp[i+1][j], dp[i][j]);
    }
    for(int j=0;j+t[i]<=X+Y;j++){
      if(dp[i][j].first == -1) continue;
      if(-(dp[i][j].second - 1) > X) continue;
      dp[i+1][j+t[i]] = max(dp[i+1][j+t[i]], make_pair(dp[i][j].first + h[i], dp[i][j].second - 1));
    }
  }
  long long ans = 0;
  for(int i=0;i<301;i++){
    for(int j=0;j<601;j++){
      ans = max(ans, (long long)dp[i][j].first);
    }
  }
  cout << ans << endl;
  return 0;
}
